/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1";
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dac1A_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dac1A_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1A_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1A_data";
}

SIGNAL("dac1B_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dac1B_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac1B_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac1B_data";
}

SIGNAL("dac2A_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dac2A_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2A_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2A_data";
}

SIGNAL("dac2B_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dac2B_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("dac2B_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dac2B_data";
}

SIGNAL("data1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sck")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sync")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("update_DACs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("update_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Mstate.midle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Mstate.mready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Mstate.mwait_config")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Mstate.mwait_dac_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Mstate.mwait_dac_b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("shift_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("shift_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shift_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shift_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shift_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shift_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shift_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shift_count";
}

SIGNAL("shiftreg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 2;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("shiftreg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg";
}

SIGNAL("shiftreg_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 2;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("shiftreg_2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("shiftreg_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "shiftreg_2";
}

SIGNAL("state.data_end")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.data_h")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.data_l")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.idle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.next_tx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.sync_h")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("state.sync_l")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

GROUP("Mstate")
{
	MEMBERS = "Mstate.midle", "Mstate.mready", "Mstate.mwait_config", "Mstate.mwait_dac_a", "Mstate.mwait_dac_b";
}

GROUP("State")
{
	MEMBERS = "state.data_end", "state.data_h", "state.data_l", "state.idle", "state.next_tx", "state.sync_h", "state.sync_l";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("clk_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 450.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("dac1A_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1A_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac1B_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2A_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("dac2B_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("data1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12531.972;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3968.028;
	}
}

TRANSITION_LIST("data2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12532.914;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3967.086;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 99840.0;
	}
}

TRANSITION_LIST("sck")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2007.306;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 16;
				LEVEL 1 FOR 500.0;
				LEVEL 0 FOR 500.0;
			}
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 3500.0;
		}
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 23000.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1992.694;
	}
}

TRANSITION_LIST("sync")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57.029;
		LEVEL 1 FOR 1450.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 17500.0;
			LEVEL 1 FOR 2500.0;
		}
		LEVEL 0 FOR 17500.0;
		LEVEL 1 FOR 22000.0;
		LEVEL 0 FOR 17500.0;
		LEVEL 1 FOR 1492.971;
	}
}

TRANSITION_LIST("test1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 59982.316;
		LEVEL 0 FOR 19500.0;
		LEVEL 1 FOR 20517.684;
	}
}

TRANSITION_LIST("test2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18483.964;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1999.811;
			LEVEL 0 FOR 18000.189;
		}
		LEVEL 1 FOR 1999.811;
		LEVEL 0 FOR 37500.189;
		LEVEL 1 FOR 1999.811;
		LEVEL 0 FOR 16.225;
	}
}

TRANSITION_LIST("test3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("test4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1483.213;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 17500.0;
			LEVEL 0 FOR 2500.0;
		}
		LEVEL 1 FOR 17500.0;
		LEVEL 0 FOR 22000.0;
		LEVEL 1 FOR 17500.0;
		LEVEL 0 FOR 1516.787;
	}
}

TRANSITION_LIST("update_DACs")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 75520.0;
		LEVEL 0 FOR 20640.0;
	}
}

TRANSITION_LIST("update_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 59982.316;
		LEVEL 0 FOR 19500.0;
		LEVEL 1 FOR 20517.684;
	}
}

TRANSITION_LIST("Mstate.midle")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3978.054;
		LEVEL 1 FOR 75500.0;
		LEVEL 0 FOR 20521.946;
	}
}

TRANSITION_LIST("Mstate.mready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59978.049;
		LEVEL 1 FOR 19500.0;
		LEVEL 0 FOR 20521.951;
	}
}

TRANSITION_LIST("Mstate.mwait_config")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3978.054;
		LEVEL 1 FOR 16000.0;
		LEVEL 0 FOR 80021.946;
	}
}

TRANSITION_LIST("Mstate.mwait_dac_a")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19978.046;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60021.954;
	}
}

TRANSITION_LIST("Mstate.mwait_dac_b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39978.041;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40021.959;
	}
}

TRANSITION_LIST("shift_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17478.054;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 3000.0;
			LEVEL 0 FOR 17000.0;
		}
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 36500.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 21.946;
	}
}

TRANSITION_LIST("shift_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9478.054;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 12000.0;
		}
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 31500.0;
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 3021.946;
	}
}

TRANSITION_LIST("shift_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5478.054;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 27500.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3021.946;
	}
}

TRANSITION_LIST("shift_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3478.054;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2000.0;
				LEVEL 0 FOR 2000.0;
			}
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 6000.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 25500.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3021.946;
	}
}

TRANSITION_LIST("shift_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2478.054;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 21500.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 21.946;
	}
}

TRANSITION_LIST("shift_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1978.054;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 16;
				LEVEL 1 FOR 500.0;
				LEVEL 0 FOR 500.0;
			}
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 3500.0;
		}
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 23000.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 2021.946;
	}
}

TRANSITION_LIST("shiftreg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11478.049;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5021.951;
	}
}

TRANSITION_LIST("shiftreg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 6021.954;
	}
}

TRANSITION_LIST("shiftreg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 7021.954;
	}
}

TRANSITION_LIST("shiftreg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 8021.954;
	}
}

TRANSITION_LIST("shiftreg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 9500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9021.954;
	}
}

TRANSITION_LIST("shiftreg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 10500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 10021.954;
	}
}

TRANSITION_LIST("shiftreg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11021.954;
	}
}

TRANSITION_LIST("shiftreg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 12021.954;
	}
}

TRANSITION_LIST("shiftreg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 13500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 13500.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 13021.954;
	}
}

TRANSITION_LIST("shiftreg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 14500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 14021.954;
	}
}

TRANSITION_LIST("shiftreg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 978.046;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 17000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 37000.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 15021.954;
	}
}

TRANSITION_LIST("shiftreg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3478.041;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 16500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 40500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 16021.959;
	}
}

TRANSITION_LIST("shiftreg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2478.041;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17500.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 58500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17021.959;
	}
}

TRANSITION_LIST("shiftreg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 978.041;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 18500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 58000.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 18021.959;
	}
}

TRANSITION_LIST("shiftreg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("shiftreg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("shiftreg_2[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11478.049;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5021.951;
	}
}

TRANSITION_LIST("shiftreg_2[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 6021.954;
	}
}

TRANSITION_LIST("shiftreg_2[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 7021.954;
	}
}

TRANSITION_LIST("shiftreg_2[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 8021.954;
	}
}

TRANSITION_LIST("shiftreg_2[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 9500.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9021.954;
	}
}

TRANSITION_LIST("shiftreg_2[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 10500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 10500.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 10021.954;
	}
}

TRANSITION_LIST("shiftreg_2[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 13000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 11500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 11021.954;
	}
}

TRANSITION_LIST("shiftreg_2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 12500.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 12021.954;
	}
}

TRANSITION_LIST("shiftreg_2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 13500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 13021.954;
	}
}

TRANSITION_LIST("shiftreg_2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 14021.954;
	}
}

TRANSITION_LIST("shiftreg_2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 978.046;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 15500.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 35000.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 15021.954;
	}
}

TRANSITION_LIST("shiftreg_2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 16500.0;
		LEVEL 1 FOR 3500.0;
		LEVEL 0 FOR 19000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 38500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 16021.954;
	}
}

TRANSITION_LIST("shiftreg_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2478.046;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17500.0;
		LEVEL 1 FOR 2500.0;
		LEVEL 0 FOR 19000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 38500.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 17021.954;
	}
}

TRANSITION_LIST("shiftreg_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 978.046;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1500.0;
			LEVEL 0 FOR 18500.0;
		}
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 38000.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 18021.954;
	}
}

TRANSITION_LIST("shiftreg_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("shiftreg_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("state.data_end")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18978.049;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 19500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 39000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1021.951;
	}
}

TRANSITION_LIST("state.data_h")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1978.049;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 16;
				LEVEL 1 FOR 500.0;
				LEVEL 0 FOR 500.0;
			}
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 3500.0;
		}
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 23000.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 2021.951;
	}
}

TRANSITION_LIST("state.data_l")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1478.049;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 17;
				LEVEL 1 FOR 500.0;
				LEVEL 0 FOR 500.0;
			}
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 2500.0;
		}
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 22000.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1521.951;
	}
}

TRANSITION_LIST("state.idle")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 478.049;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 19500.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 19500.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 19500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 21.951;
	}
}

TRANSITION_LIST("state.next_tx")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19478.049;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 19500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 39000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 521.951;
	}
}

TRANSITION_LIST("state.sync_h")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 978.049;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 19500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 39000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 19021.951;
	}
}

TRANSITION_LIST("state.sync_l")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 478.054;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 500.0;
			LEVEL 0 FOR 19500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 39000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 19500.0;
		LEVEL 1 FOR 21.946;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1A_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac1B_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2A_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dac2B_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "data1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sck";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sync";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "update_DACs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "update_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate.midle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate.mready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate.mwait_config";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate.mwait_dac_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "Mstate.mwait_dac_b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75, 76, 77;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shift_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 0;
	CHILDREN = 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 78;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
	CHILDREN = 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "shiftreg_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "State";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 0;
	CHILDREN = 113, 114, 115, 116, 117, 118, 119;
}

DISPLAY_LINE
{
	CHANNEL = "state.data_end";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.data_h";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.data_l";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.idle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.next_tx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.sync_h";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 112;
}

DISPLAY_LINE
{
	CHANNEL = "state.sync_l";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 112;
}

TIME_BAR
{
	TIME = 12550;
	MASTER = TRUE;
}
;
